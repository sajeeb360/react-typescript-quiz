{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\react-typescript-quiz-app\\\\src\\\\components\\\\QuestionCard.tsx\";\n\nimport * as React from \"react\"; //import types\n\n//import styling\nimport { Wrapper, ButtonWrapper } from \"./QuestionCard.styles\";\n\nvar QuestionCard = function QuestionCard(_ref) {\n  var question = _ref.question,\n      answers = _ref.answers,\n      callback = _ref.callback,\n      userAnswer = _ref.userAnswer,\n      questionNum = _ref.questionNum,\n      totalQuestions = _ref.totalQuestions;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Question: \", questionNum, \" / \", totalQuestions), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"question\",\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), answers.map(function (answer) {\n    return /*#__PURE__*/React.createElement(ButtonWrapper, {\n      correct: (userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.correctAnswer) === answer,\n      userClicked: (userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.answer) === answer,\n      key: answer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !!userAnswer,\n      value: answer,\n      onClick: callback,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: answer\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\n\nexport default QuestionCard;","map":{"version":3,"sources":["E:/react-typescript-quiz-app/src/components/QuestionCard.tsx"],"names":["React","Wrapper","ButtonWrapper","QuestionCard","question","answers","callback","userAnswer","questionNum","totalQuestions","__html","map","answer","correctAnswer"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;;AAGA;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,uBAAvC;;AAWA,IAAMC,YAA6B,GAAG,SAAhCA,YAAgC,OAOhC;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,cACI,QADJA,cACI;AACJ,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaD,WADb,SAC6BC,cAD7B,CADF,eAIE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAwB,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAMGC,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD;AAAA,wBACX,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEM,aAAZ,MAA8BD,MADzC;AAEE,MAAA,WAAW,EAAE,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEK,MAAZ,MAAuBA,MAFtC;AAGE,MAAA,GAAG,EAAEA,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAQ,MAAA,QAAQ,EAAE,CAAC,CAACL,UAApB;AAAgC,MAAA,KAAK,EAAEK,MAAvC;AAA+C,MAAA,OAAO,EAAEN,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,uBAAuB,EAAE;AAAEI,QAAAA,MAAM,EAAEE;AAAV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADW;AAAA,GAAZ,CANH,CADF;AAoBD,CA5BD;;AA8BA,eAAeT,YAAf","sourcesContent":["import * as React from \"react\";\r\n\r\n//import types\r\nimport { AnswerObject } from \"../App\";\r\n\r\n//import styling\r\nimport { Wrapper, ButtonWrapper } from \"./QuestionCard.styles\";\r\n\r\ntype Props = {\r\n  question: string;\r\n  answers: string[];\r\n  callback: any;\r\n  userAnswer: AnswerObject | undefined;\r\n  questionNum: number;\r\n  totalQuestions: number;\r\n};\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n  question,\r\n  answers,\r\n  callback,\r\n  userAnswer,\r\n  questionNum,\r\n  totalQuestions\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <p className=\"number\">\r\n        Question: {questionNum} / {totalQuestions}\r\n      </p>\r\n      <p className=\"question\" dangerouslySetInnerHTML={{ __html: question }} />\r\n\r\n      {answers.map((answer: string) => (\r\n        <ButtonWrapper\r\n          correct={userAnswer?.correctAnswer === answer}\r\n          userClicked={userAnswer?.answer === answer}\r\n          key={answer}\r\n        >\r\n          <button disabled={!!userAnswer} value={answer} onClick={callback}>\r\n            <span dangerouslySetInnerHTML={{ __html: answer }}></span>\r\n          </button>\r\n        </ButtonWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n"]},"metadata":{},"sourceType":"module"}